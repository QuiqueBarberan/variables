name: workflow-name
run-name: ${{ github.event.action }} - ${{ github.event_name }} 

on:
  #push:
  #workflow_dispatch:
  workflow_call:
    inputs:
      allure:
        type: boolean
        description: Generar reporte Allure
        default: true
      extent:
        type: boolean
        description: Generar reporte Extent
        default: true
      cucumber:
        type: boolean
        description: Generar reporte Cucumber
        default: true
      recorder:
        type: boolean
        description: Grabar la ejecuci√≥n
        default: true
env:
  # Setting an environment variable with the value of a configuration variable
  var1: ${{ github.event.inputs.recorder }}
  env_var: ${{ github.event.inputs.allure }}

jobs:
  display-variables:
    name: ${{ vars.JOB_NAME }}
    # You can use configuration variables with the `vars` context for dynamic jobs
    if: ${{ vars.USE_VARIABLES == 'true' }}
    runs-on: ${{ vars.RUNNER }}
    environment: ${{ vars.ENVIRONMENT_STAGE }}
    steps:
    - name: Use variables
      run: |
        echo "repository variable : ${{ vars.REPOSITORY_VAR }}"
        echo "organization variable : ${{ vars.ORGANIZATION_VAR }}"
        echo "overridden variable : ${{ vars.OVERRIDE_VAR }}"
        echo "variable from shell environment : $env_var"
        echo "variable from input workflow_1: $var1"
        echo "variable from input 1: ${{ inputs.allure }}"
        echo "variable from input 2: ${{ inputs.extent }}"
        echo "variable from input 3: ${{ inputs.cucumber }}"
        echo "variable from input 4: ${{ inputs.recorder }}"

#     - name: ${{ vars.HELLO_WORLD_STEP }}
#       if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
#       uses: actions/hello-world-javascript-action@main
#       with:
#         who-to-greet: ${{ vars.GREET_NAME }}
